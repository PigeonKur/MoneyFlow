@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject CustomAuthStateProvider AuthStateProvider

<link href="css/login.css?v=2" rel="stylesheet" />

<div class="screen">
    <div class="background-shadow">
        <div class="container">
            <div class="text-wrapper">MoneyFlow</div>
        </div>
        <div class="heading">
            <div class="div">Вход</div>
        </div>
        <div class="input">
            <input @bind="loginModel.Email" placeholder="Email" class="input-field" />
        </div>
        <div class="input" style="top: 221px;">
            <input type="password" @bind="loginModel.Password" placeholder="Пароль" class="input-field" />
        </div>
        <button class="button" @onclick="LoginUser">Войти</button>


        <div class="container-2">
            <div class="text-wrapper-5">Нет аккаунта?</div>
            <a href="/register" class="text-wrapper-6"> Регистрация</a>
        </div>
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert-info">@message</div>
        }
    </div>
</div>

@code {
    private UserLoginModel loginModel = new();
    private string message = string.Empty;

    private async Task LoginUser()
    {
        message = string.Empty;

        if (string.IsNullOrWhiteSpace(loginModel.Email))
        {
            message = "Введите email.";
            return;
        }

        if (!IsValidEmail(loginModel.Email))
        {
            message = "Введите корректный email.";
            return;
        }

        if (string.IsNullOrWhiteSpace(loginModel.Password))
        {
            message = "Введите пароль.";
            return;
        }

        if (loginModel.Password.Length < 6)
        {
            message = "Пароль должен содержать не менее 6 символов.";
            return;
        }

        var response = await Http.PostAsJsonAsync("api/UserAccount/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            // Получаем данные пользователя из ответа
            var userInfo = await response.Content.ReadFromJsonAsync<UserInfo>();

            if (userInfo != null)
            {
                // Устанавливаем в localStorage и уведомляем систему
                await AuthStateProvider.SetUserAsync(userInfo);
                NavigateToMain();
            }
            else
            {
                message = "Ошибка получения данных пользователя.";
            }
        }
        else
        {
            message = "Неверный email или пароль.";
        }
    }
    private void NavigateToMain()
    {
        Navigation.NavigateTo("/main");
    }
    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

}
