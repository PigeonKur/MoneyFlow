@page "/login"
@inject HttpClient Http

<link href="css/login.css" rel="stylesheet" />

<div class="screen">
    <div class="background-shadow">
        <div class="container">
            <div class="text-wrapper">MoneyFlow</div>
        </div>
        <div class="heading">
            <div class="div">Вход</div>
        </div>
        <div class="input">
            <input @bind="loginModel.Email" placeholder="Email" class="input-field" />
        </div>
        <div class="input" style="top: 221px;">
            <input type="password" @bind="loginModel.Password" placeholder="Пароль" class="input-field" />
        </div>
        <button class="button" @onclick="LoginUser">
            <div class="text-wrapper-4">Войти</div>
        </button>

        <div class="container-2">
            <div class="text-wrapper-5">Нет аккаунта?</div>
            <a href="/register" class="text-wrapper-6"> Регистрация</a>
        </div>
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert-info">@message</div>
        }
    </div>
</div>

@code {
    private UserLoginModel loginModel = new();
    private string message = string.Empty;

    private async Task LoginUser()
    {
        var response = await Http.GetAsync($"api/UserAccount?email={loginModel.Email}");

        if (response.IsSuccessStatusCode)
        {
        }
        else
        {
            message = "Пользователь не найден или ошибка входа.";
        }
    }
}
