@page "/register"
@using MoneyFlowClient.Client.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<link href="css/register.css" rel="stylesheet" />

<div class="screen">
    <div class="form-card">
        <h1>MoneyFlow</h1>
        <h2>Регистрация</h2>

        <input placeholder="Ваше имя" @bind="registerModel.Name" />
        <input type="email" placeholder="Email" @bind="registerModel.Email" />
        <input type="password" placeholder="Пароль" @bind="registerModel.Password" />
        <input type="password" placeholder="Повторите пароль" @bind="confirmPassword" />

        <button @onclick="RegisterUser">Зарегистрироваться</button>

        <div class="footer">
            <span>Уже есть аккаунт?</span>
            <NavLink href="/login">Войти</NavLink>
        </div>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert-container">@message</div>
        }
    </div>
</div>

@code {
    private UserRegisterModel registerModel = new();
    private string confirmPassword = string.Empty;
    private string message = string.Empty;

    private async Task RegisterUser()
    {
        if (registerModel.Password != confirmPassword)
        {
            message = "Пароли не совпадают.";
            return;
        }

        var response = await Http.PostAsJsonAsync("api/UserAccount", registerModel);

        if (response.IsSuccessStatusCode)
        {
            message = "Регистрация прошла успешно!";
            NavigateToMain();
        }
        else
        {
            message = "Ошибка регистрации.";
        }
    }
    private void NavigateToMain()
    {
        Navigation.NavigateTo("/main");
    }
}
